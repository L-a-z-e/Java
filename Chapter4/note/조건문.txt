프로그램의 flow를 바꾸는 역할을 하는 문장들을 제어문이라함

제어문
- 조건문
if, switch
주로 if / 처리할 경우의 수가 많은 경우 switch

{} 블럭 여러문장일 경우 사용, 한 문장일 경우 생략가능

- if문
if(조건식) {
 // 참일때 수행할 문장
}
- if-else 문
if(조건식){
// 참일때 수행
}else{
false 일때 수행
}

- if - else if 문
if (조건식1){
 // 조건식 1 이 true일 때 수행
} else if(조건식2){
 조건식 2가 true일 때 수행
}else if(조건식3){
 조건식3이 true일 때 수행
}else {
 위의 조건이 모두 false일때 수행
}

-  중첩 if문
if(조건식1){
 // 조건식 1 이 true일때 수행
        if(조건식2){
         //조건식 1과 조건식 2 가 모두 true일 때 수행
        }else {
        // 조건식 1이 true, 조건식2 false 일 때 수행
        }
}

- switch
1.  조건식을 계산한다.
2.  조건식의 결과와 일치하는 case문으로 이동한다.
3.  이후의 문장들을 수행한다.
4.  break문이나 switch문의 끝을 만나면 switch문 전체를 빠져나간다.

switch( 조건식 ){
case 값1 :
// 값1일시 수행할 문장
break;

case 값2:
// 값2일시 수행할 문장
break;

default :
// 조건식의 결과와 일치하는 case문이 없을때 수행할 문장
}

- switch문의 제약조건
1. 조건식의 결과는 정수 또는 문자열이어야 한다.
2. case문의 값은 정수 상수만 가능하며, 중복되지 않아야 한다.
- 반복문


