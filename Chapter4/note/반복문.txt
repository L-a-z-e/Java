반복문
- 어떤 작업이  반복적으로 수행되도록 할 때 사용된다.

for문
- 반복 횟수를 알고 있을 때 적합
for ( 초기화 ; 조건식 ; 증감식) {

}

초기화 - 보통 하나의 변수를 사용하지만 둘 이상의 변수가 필요할때는 ,를 구분자로 ( 단 두 변수는 타입이 같아야함 )

조건식 - 조건식 값이 참이면 반복, 거짓이면 중단후 for문 빠져나감

증감식 - 반복문을 제어하는 변수의 값을 증가 또는 감소시키는 식  ,를 구분자로 두문장을 하나로 연결해서 쓸 수 있다.

중첩 for문

for문안에 또 다른 for문을 포함시킴, 횟수는 거의 제한 없음

향상된 for문
for ( 타입 변수명 : 배열 또는 컬렉션){
 //반복할 문장
}


while문
- 조건식이  true인 동안 {} 내 문장 반복
while (조건식){
//반복할 문장
}
for vs while 초기화나 증감식이 필요하지 않은 경우라면 while문이 적합할 수 있음
for문과 달리 while문의 조건식은 생략할 수 없음

do-while 문
- while문과 반대로 먼저 {} 를 실행한 후 조건식을 평가 -> 최소 한번은 수행될 것을 보장한다.

do {
// 참일때 반복
} while(조건식);

break문
- 반복문에서도 사용가능, break문은 자신이 포함된 가장 가까운 반복문을 벗어난다.

continue문
- 반복문 내에서만 사용가능, 반복이 진행되는 도중에 continue를 만나면 반복문의 끝으로 이동한 후 다음 반복으로 넘어감
for문 -> 증감식, while, do-while문은 조건식으로 이동

이름붙은 반복문
- break문과 continue문에 이름을 지정해줌으로써 하나 이상의 반복문을 벗어나거나 반복을 건너뛸 수 있다.