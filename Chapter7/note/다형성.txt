다형성 - 여러가지 형태를 가질 수 있는 능력, 한 참조변수로 여러 타입의 객체를 참조할 수 있도록 함
        조상클래스 타입의 참조변수로 -> 자손클래스의 인스턴스를 참조할 수 있다.

        Tv 조상클래스
        SmartTv 자손클래스일때

        Tv tv = new SmartTv();
        SmartTv smartTv = new SmartTv();
        라고 하면 둘다 같은 타입의 인스턴스지만 참조변수의 타입에 따라서 사용할 수 있는 멤버의 개수가 달라진다.
        반대로 자손타입의 참조변수로 조상타입의 인스턴스를 참조하면 컴파일 에러 발생
        * 참조변수가 사용할 수 있는 멤버의 개수는 인스턴스의 멤버 개수보다 같거나 적어야한다.
        ( 참조변수의 타입이 참조변수에서 참조하고 있는 인스턴스에서 사용할 수 있는 멤버의 개수를 결정한다. )

참조변수의 형변환 - 자손타입 -> 조상타입 (UpCasting) 형변환 생략가능
                조상타입 -> 자손타입 (DownCasting) 형변환 생략불가
             - 형변환은 참조변수의 타입을 변환하는 것이지 인스턴스를 변환하는 것이 아니기 때문에 인스턴스에 아무런 영향을 미치지 않는다.
               형변환을 통해서 참조하고 있는 인스턴스에서 사용할 수 있는 멤버의 범위를 조절하는 것 뿐임.

instanceof - 위의 예시에 적용해보면 SmartTv의 인스턴스를 생성하고 instanceof 연산을 해보면 ->
smartTv instanceof TV 도 true instanceof SmartTv도 true instanceof Object도 true
참조변수.getClass().getName() 해보면 SmartTv로 나옴

조상클래스와 자손클래스의 인스턴스 변수 명이 같을때 참조변수의 타입에 따라 출력되는 멤버변수가 다르다.

참조변수 타입의 변환은 매개변수에서도 사용 가능하다
PolyArgumentTest 참고

str += obj 에서 문자열과 참조변수의 덧셈은 참조변수에 toString()을 호출한 결과이다.