클래스 영역
    - 클래스 변수 (클래스가 메모리에 올라갈 때)
    - 인스턴스 변수 (인스턴스가 생성될 때)
클래스 영역 이외 (메서드, 생성자, 초기화 블럭 내부)
    - 지역변수 (변수 선언문이 수행될 때)

메서드 : 특정 작업을 수행하는 일련의 문장들을 하나로 묶은 것
    - 높은 재사용성
    - 중복된 코드의 제거
    - 프로그램의 구조화

메서드 선언부
    반환타입 메서드명 매개변수
    int    add   ( int a , int b )
메서드 구현부
    return - 반환타입과 일치하거나 적어도 자동 형변환이 가능해야 함, return 값은 1개만 허용
    지역변수 - 메서드 내에서 선언된 변수는 그 메서드 내에서만 사용할 수 있다.

같은 클래스 내의 메서드끼리는 참조변수를 사용하지 않고도 서로 호출이 가능하지만
static 메서드는 같은 클래스 내의 인스턴스 메서드를 호출할 수 없다.

return - 현재 실행 중인 메서드를 종료하고 호출한 메서드로 되돌아간다.
모든 메서드에서는 반환값의 유무에 관계없이 적어도 하나의 return 문이 있어야한다.
반환타입이 void 일때 return 이 없는 경우는 컴파일러가 자동으로 return 을 추가해주기 때문이다.

매개변수의 유효성 검사 - 호출하는 쪽에서는 타입만 맞으면 어떤 값도 보낼 수 있기 때문에 가능한 모든 경우의 수를 고민하고 대비해서 코딩해야한다.

클래스 메서드(static method) & 인스턴스 메서드
클래스 메서드 -> 인스턴스 변수나 인스턴스 메서드를 사용하지 않는 메서드를 일반적으로 static 메서드로 정의한다.
1. 클래스를 설계할 때 멤버변수 중 모든 인스턴스에서 공통으로 사용하는 것에 static
2. 클래스 변수 ( static 변수 ) 는 인스턴스를 생성하지 않아도 사용가능하다. ( 메모리에 올라갈 때 자동적으로 생성되기 때문 )
3. 클래스 메서드는 인스턴스 변수를 사용할 수 없다.
    - 인스턴스 변수는 인스턴스가 반드시 존재해야만 사용할 수 있는데 클래스 메서드는 인스턴스 생성없이 호출이 가능하므로 클래스 메서드에서 인스턴스 변수 사용을 금지한다.
    반대로 인스턴스 변수, 인스턴스 메서드에서는 언제든 static이 붙은 멤버를 사용 가능하다.
4. 메서드 내에서 인스턴스 변수를 사용하지 않는다면, static을 붙이는 것을 고려한다.
    - static을 안 붙인 메서드는 실행 시 호출되어야할 메서드를 찾는 과정이 추가적으로 필요하기 때문에 시간이 더 걸린다.